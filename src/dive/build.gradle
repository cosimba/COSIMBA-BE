buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.10'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.cosimba'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot Web
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// Spring Boot Data JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// MySQL
	implementation 'com.mysql:mysql-connector-j'
	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	// JUnit 5 for testing
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Spring Security (보안 및 인증)
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// JWT (토큰 기반 인증)
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'  // JSON serialization

	// BCrypt for password encoding
	implementation 'org.springframework.security:spring-security-crypto'

	// Spring Boot DevTools (개발 편의성)
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// 이메일 발송
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// google cloud storage
	implementation group: 'com.google.cloud', name: 'google-cloud-storage', version: '2.40.1'


}

tasks.named('test') {
	useJUnitPlatform()
}

// [3] Querydsl 설정부
def generated = 'src/main/generated'

// [4] querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// [5] java source set 에 querydsl QClass 위치 추가
sourceSets {
	main.java.srcDirs += [ generated ]
}

// [6] gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file(generated)
}
